// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  firstName String
  lastName  String
  role      Role     @default(USER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Category {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  products Product[]

  @@map("categories")
}

model Product {
  id          Int      @id @default(autoincrement())
  sku         String   @unique
  name        String
  description String?
  price       Decimal  @db.Decimal(10, 2)
  cost        Decimal? @db.Decimal(10, 2)
  quantity    Int      @default(0)
  minStock    Int      @default(0)
  maxStock    Int?
  barcode     String?
  imageUrl    String?
  isActive    Boolean  @default(true)
  categoryId  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  category    Category @relation(fields: [categoryId], references: [id])
  stockMovements StockMovement[]

  @@map("products")
}

model StockMovement {
  id          Int           @id @default(autoincrement())
  productId   Int
  type        MovementType
  quantity    Int
  reason      String?
  referenceId String?
  createdAt   DateTime      @default(now())

  product Product @relation(fields: [productId], references: [id])

  @@map("stock_movements")
}

model Supplier {
  id          Int      @id @default(autoincrement())
  name        String
  email       String?  @unique
  phone       String?
  address     String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("suppliers")
}

enum Role {
  ADMIN
  MANAGER
  USER
}

enum MovementType {
  IN
  OUT
  ADJUSTMENT
}
